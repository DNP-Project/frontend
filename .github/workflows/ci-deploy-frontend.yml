name: CI & Deploy Frontend

on:
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: registry.dnp-project.ru
  IMAGE_NAME: frontend

jobs:
  build-and-push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps & build
        working-directory: app
        run: |
          npm ci
          npm run build

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build Docker image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG .


      - name: Push Docker image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG

  deploy:
    name: SSH Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            TAG=${{ github.ref == 'refs/heads/main' && 'latest' || 'dev' }}
            if [ "$TAG" = "latest" ]; then
              cd /devops/prod
            else
              cd /devops/stage
            fi
            docker compose pull frontend
            docker compose up -d frontend
